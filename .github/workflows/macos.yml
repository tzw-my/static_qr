# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Download dependencies
        run: |
          brew update
          brew install libwebsockets libjson-rpc-cpp
      - name: Static build
        run: |
          dir="$(pwd)"
          (
            curl -LO https://github.com/json-c/json-c/archive/refs/tags/json-c-0.17-20230812.tar.gz
            tar xvf json-c-0.17-20230812.tar.gz
            cd json-c-json-c-0.17-20230812/
            mkdir json-c-build && cd json-c-build
            cmake ../
            make
            make install
          )
          git clone https://github.com/tsl0922/ttyd.git
          mkdir build && cd build
          mkdir bin
          cmake ../ttyd/
          echo "make 编译开始"
          make
          echo "make 编译结束"
          (
            otool -L ttyd > lib_info || {
                cat lib_info
                printf "%s\n" "otool -L ttyd fail"
                continue
            }
            echo "看看文件有没有问题"
            cat lib_info
            echo "没问题"
            mkdir lib
            while read -r libname;do
                libdir="${libname%%" ("*}"
                echo "看看哪一个出问题了: ${libdir}"
                [ -f "${libdir}" ] && {
                    command cp -n ${libdir} ./lib/
                    install_name_tool -change "${libdir}" "@executable_path/../lib/${libdir##*/}" ttyd
                } 
            done <<A
            $(cat lib_info)
          A
          )
          echo "这里之前出问题"
          (
            cd "${dir}" && {
              echo "${dir} -------"
              tar cvf ttdy.tar.gz build
            }
          )
      - uses: actions/upload-artifact@v3
        with:
          path: "ttdy.tar.gz"
          name: "ttdy"

